name: Build, Test and Deploy to Prod

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4  # Updated to v4

    - name: Install protoc
      uses: arduino/setup-protoc@v2  # Updated to v2

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable  # More modern approach
      with:
        toolchain: stable

    - name: Build and test code
      run: |
        cargo build --verbose
        cargo test --verbose

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3  # Updated to v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3  # Updated to v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker images
      uses: docker/bake-action@v4  # Updated to v4
      with:
        push: true
        files: |
          docker-compose.yml
        set: |
          *.cache-from=type=gha
          *.cache-to=type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Install sshpass
      run: sudo apt-get update && sudo apt-get install -y sshpass

    - name: Copy docker-compose.yml to droplet
      run: sshpass -p "${{ secrets.DROPLET_PASSWORD }}" scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null docker-compose.yml root@${{ vars.DROPLET_IP }}:~

    - name: Deploy
      uses: appleboy/ssh-action@v1.0.3  # Use specific version
      with:
        host: ${{ vars.DROPLET_IP }}
        username: root
        password: ${{ secrets.DROPLET_PASSWORD }}
        script: |
          cd ~
          docker-compose down
          docker-compose pull
          docker-compose up -d --build